---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: operator-tooling-on-pull-request
  annotations:
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/task: "[git-clone]"
    pipelinesascode.tekton.dev/max-keep-runs: "2"
spec:
  params:
    - name: repo_url
      value: "{{repo_url}}"
    - name: revision
      value: "{{revision}}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    tasks:
      - name: fetchit
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source

      - name: unitlint
        runAfter:
          - fetchit
        taskSpec:
          workspaces:
            - name: source
          steps:
            - name: unittest
              # we get bumped out when usingh the official image with docker.io
              # ratelimit so workaround this.
              image: registry.redhat.io/rhel9/go-toolset:1.17.7
              workingDir: $(workspaces.source.path)
              script: |
                #!/usr/bin/env bash
                set -eux
                go test -v -race -coverprofile=coverage.txt -covermode=atomic -timeout 5m ./...

            - name: lint
              # golangci-lint has not tagged their image for 1.40.0 yet so using latest for now until we can pin it
              image: mirror.gcr.io/golangci/golangci-lint:latest
              workingDir: $(workspaces.source.path)
              script: |
                #!/usr/bin/env bash
                set -eux
                golangci-lint run ./... --modules-download-mode=vendor \
                              --max-issues-per-linter=0 \
                              --max-same-issues=0 \
                              --deadline 5m
        workspaces:
          - name: source
            workspace: source

    workspaces:
      - name: source
  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
